trigger:
- main

# Use a single pool/job to ensure everything runs in sequence on one agent
pool:
  name: 'Default'

variables:
  # Azure Resource Manager service connection name
  azureSubscription: 'NewAzureRMConnection'

  # Web app name
  webAppName: 'FirstExpressApp777'

steps:
- task: UseNode@1
  inputs:
    version: '20.x'
- task: Cache@2
  inputs:
    key: 'node | "$(Agent.OS)" | package-lock.json'
    path: 'node_modules'
    cacheHitVar: 'CACHE_RESTORED'
- script: |
    echo "Installing dependencies (development)"
    npm install
  displayName: 'Install Dependencies (Dev)'
- script: |
    echo "Building Node.js App"
    npm run build
  displayName: 'Build Node.js App'
- script: |
      echo "Cleaning up node_modules on Windows"
      rmdir /s /q node_modules
  displayName: 'Clean node_modules'

- script: |
    echo "Installing dependencies (production)"
    npm install
  displayName: 'Install Dependencies (Prod)'
- task: ArchiveFiles@2
  displayName: 'Archive Files'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false
    archiveType: zip
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true


- task: AzureRmWebAppDeployment@4
  displayName: 'Azure App Service Deploy'
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: '$(azureSubscription)'
    appType: 'webAppLinux'
    WebAppName: '$(webAppName)'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
